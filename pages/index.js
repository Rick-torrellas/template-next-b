//@ts-check
/**
 * @file 
 * @description Este es el archivo principal de la aplicacion, renderizara el componente Home.
 * @requires next/head
 * @requires ./mongo 
 * @requires ./Data 
 * @requires next/link
 * @requires debug
 */
const debug = require("debug")("debug");
import Head from "next/head";
import mongo from "../db/mongo";
import Data from "../models/Data";
import Link from "next/link";
/**
 * @component
 * @param {Object} props
 * @param {Object} props.data La informacion recibida de la base de datos. informacion generica del template
 * @param {string} props.data.title El titulo de la informacion.
 * @param {string} props.data._id El id unico.
 * @param {string} props.data.desc Una descripcion de la informacion.
 * @description El componente central de la aplicacion, renderiza la raiz del proyecto. haciendo una llamada a la base de datos con la funcion {@link home}.
 */
 function Home({ data }) {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container">
        <h1 className="my-3 text-center">Title</h1>

        <Link href="/new">
          <a className="btn btn-primary w-100 mb-3">Agregar</a>
        </Link>
        {data.map(({ title, _id, desc }) => (
          <div className="card mb-2" key={_id}>
            <div className="card-body">
              <p className="text-uppercase h5">{title}</p>
              <p className="fw-light">{desc}</p>
              <div>
                <Link href="/[id]/edit" as={`/${_id}/edit`}>
                  <a className="btn btn-warning me-2">Editar</a>
                </Link>
                <Link href="/[id]" as={`/${_id}`}>
                  <a className="btn btn-info">Visualizar</a>
                </Link>
              </div>
            </div>
          </div>
        ))}
      </main>
    </div>
  );
}
/**
 * @alias home
 * @description getServerSideProps() Va a realizar una busqueda a la base de datos. y se va a traer todas las colecciones de la tabla data. Usando mongoose.
 * @category getServerSideProps
 * @returns {Promise<any>} Toda las tablas de data.
 */
export async function getServerSideProps() {
  try {
    await mongo();
    const result = await Data.find({});
    const data = result.map((doc) => {
      const datica = doc.toObject();
      datica._id = datica._id.toString();
      return datica;
    });
    return { props: { data } };
  } catch (error) {
    console.log(error);
  }
} 

export default Home;